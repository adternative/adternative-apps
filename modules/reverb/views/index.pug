extends ../../../views/layout

block content
  - const healthScore = overview && overview.technicalHealthScore ? Math.round(overview.technicalHealthScore) : null;
  - const stats = overview || {};
  - const totalKeywords = (typeof stats.keywordCount === 'number') ? stats.keywordCount : (stats.keywordCount || 0);
  - const avgPosition = (typeof stats.avgRankingPosition === 'number') ? stats.avgRankingPosition : (stats.avgRankingPosition || 0);
  - const backlinkCount = (typeof stats.backlinkCount === 'number') ? stats.backlinkCount : (stats.backlinkCount || 0);

  div(class="mb-10 flex flex-col md:flex-row md:items-center md:justify-between gap-4")
    div
      h2(class="text-3xl font-semibold text-slate-900 tracking-tight") REVERB Intelligence Dashboard
      p(class="text-slate-500 mt-2 max-w-2xl") Actionable SEO intelligence that unifies technical health, keyword demand, backlinks, and predictive insights so your team can move before the SERPs do.
    div(class="flex flex-wrap items-center gap-3")
      form(action="/reverb/site-health/audit" method="post" class="inline-flex")
        input(type="hidden" name="mock" value="true")
        button(type="submit" class="inline-flex items-center gap-2 rounded-lg border border-slate-200 px-4 py-2 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
          i(data-lucide="refresh-cw" class="w-4 h-4")
          | Run Flash Audit
      form(action="/reverb/keywords/sync" method="post" class="inline-flex")
        input(type="hidden" name="mock" value="true")
        button(type="submit" class="inline-flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow hover:bg-blue-700 transition")
          i(data-lucide="radar" class="w-4 h-4")
          | Refresh Keywords
      a(href="/reverb/site-health" class="inline-flex items-center gap-2 rounded-lg bg-slate-900 px-4 py-2 text-sm font-medium text-white shadow hover:bg-slate-800 transition")
        i(data-lucide="monitor" class="w-4 h-4")
        | Open Site Health

  div(class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-5 mb-10")
    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Technical Health
      h3(class="text-3xl font-bold text-slate-900 mt-3 flex items-baseline gap-2")
        | #{healthScore !== null ? healthScore : '—'}
        span(class="text-sm font-medium text-slate-400") /100
      p(class="text-sm text-slate-500 mt-3")
        | Core Web Vitals weighted with crawl coverage

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Keywords Tracked
      h3(class="text-3xl font-bold text-slate-900 mt-3") #{totalKeywords}
      p(class="text-sm text-slate-500 mt-3")
        | #{totalKeywords > 0 ? 'Active intents synced from Semrush / mock data.' : 'Add keywords to start tracking trends.'}

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Avg. Position
      h3(class="text-3xl font-bold text-slate-900 mt-3") #{avgPosition ? avgPosition.toFixed ? avgPosition.toFixed(1) : avgPosition : '—'}
      p(class="text-sm text-slate-500 mt-3") Lower is better across last 14 days

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Backlink Velocity
      - const primaryBacklink = backlinks && backlinks.length ? backlinks[0] : null;
      - const velocity = primaryBacklink && primaryBacklink.velocity ? primaryBacklink.velocity : null;
      - const velocityValue = velocity && typeof velocity.velocity === 'number' ? velocity.velocity : (velocity && velocity.velocity) || '2.4';
      - const velocityTrend = velocity && velocity.trend ? velocity.trend : 'steady';
      - const velocityClass = velocityTrend === 'down' ? 'bg-red-100 text-red-600' : velocityTrend === 'up' ? 'bg-emerald-100 text-emerald-600' : 'bg-slate-100 text-slate-600';
      h3(class="text-3xl font-bold text-slate-900 mt-3 flex items-center gap-2")
        | #{velocityValue}
        span(class=["inline-flex items-center px-2.5 py-0.5 rounded text-xs font-medium", velocityClass]) #{velocityTrend}
      p(class="text-sm text-slate-500 mt-3") #{backlinkCount ? backlinkCount + ' backlinks monitored across recent snapshots.' : 'Backlinks will appear once sync completes.'}

  div(class="mb-10 bg-white border border-slate-200 rounded-2xl p-6 shadow-sm")
    h3(class="text-lg font-semibold text-slate-900 mb-3") Navigate REVERB modules
    p(class="text-sm text-slate-500 mb-4") Jump into detailed views to manage crawls, keywords, backlinks, and insights.
    div(class="flex flex-wrap gap-3")
      a(href="/reverb/site-health" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-slate-200 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
        i(data-lucide="activity" class="w-4 h-4")
        | Site Health
      a(href="/reverb/keywords" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-slate-200 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
        i(data-lucide="list-checks" class="w-4 h-4")
        | Keywords
      a(href="/reverb/backlinks" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-slate-200 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
        i(data-lucide="link" class="w-4 h-4")
        | Backlinks
      a(href="/reverb/competitors" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-slate-200 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
        i(data-lucide="users" class="w-4 h-4")
        | Competitors
      a(href="/reverb/insights" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-slate-200 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
        i(data-lucide="sparkles" class="w-4 h-4")
        | Insights

  div(class="grid grid-cols-1 xl:grid-cols-5 gap-6 mb-10")
    div(class="xl:col-span-3 bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      div(class="flex items-center justify-between mb-4")
        h3(class="text-lg font-semibold text-slate-900") Site Health Timeline
        if audit
          span(class="text-xs font-medium text-blue-600") Last audit #{audit.completedAt ? new Date(audit.completedAt).toLocaleDateString() : ''}
      canvas#healthChart(width="400" height="160")
      if audit && audit.issues
        ul(class="mt-5 space-y-3 text-sm text-slate-600")
          each issue in audit.issues.recommendations || []
            li(class="flex gap-2")
              span(class="mt-1") •
              span #{issue}
      else
        p(class="text-sm text-slate-500 mt-4") No audit data yet. Run a flash audit to populate this section.

    div(class="xl:col-span-2 bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      h3(class="text-lg font-semibold text-slate-900 mb-4") Event Overlay
      if events && events.length
        ul(class="space-y-4")
          each event in events
            li(class="border border-slate-200 rounded-xl p-4 text-sm")
              div(class="flex items-center justify-between")
                span(class="font-medium text-slate-700 capitalize") #{event.type.replace('_', ' ')}
                span(class="text-xs text-slate-400") #{new Date(event.occurredAt).toLocaleDateString()}
              p(class="text-slate-600 mt-2") #{event.title}
              if event.metadata
                pre(class="mt-2 text-xs bg-slate-50 text-slate-500 rounded-lg p-3 overflow-x-auto") #{JSON.stringify(event.metadata, null, 2)}
      else
        p(class="text-sm text-slate-500") Events will appear here as REVERB correlates SERP shifts.

  div(class="grid grid-cols-1 2xl:grid-cols-3 gap-6 mb-10")
    div(class="2xl:col-span-2 bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      div(class="flex items-center justify-between mb-4")
        h3(class="text-lg font-semibold text-slate-900") Keyword Momentum
        a(href="/reverb/keywords" class="text-xs font-medium text-blue-600 hover:text-blue-700") Manage in REVERB
      if keywords && keywords.length
        table(class="w-full text-sm text-left text-slate-600 border-t border-slate-200")
          thead
            tr(class="text-xs uppercase text-slate-500 tracking-wide")
              th(class="py-3") Keyword
              th(class="py-3") Intent
              th(class="py-3") Position
              th(class="py-3") Volatility
              th(class="py-3") Difficulty
          tbody
            each k in keywords
              - const latest = k.snapshots && k.snapshots.length ? k.snapshots[0] : null;
              - const latestPosition = latest && latest.position !== undefined ? latest.position : '—';
              - const hasPrevious = latest && latest.previousPosition !== undefined && latest.previousPosition !== null;
              - const movementUp = hasPrevious ? latest.previousPosition > latest.position : false;
              - const volatilityDisplay = latest && latest.serpVolatility ? Math.round(latest.serpVolatility * 100) + '%' : '—';
              - const difficultyDisplay = latest && latest.difficulty !== undefined ? latest.difficulty : '—';
              tr(class="border-t border-slate-200 hover:bg-slate-50 transition")
                td(class="py-3 font-medium text-slate-800") #{k.keyword}
                td(class="py-3 text-slate-500 capitalize") #{k.intent || '—'}
                td(class="py-3")
                  span(class="inline-flex items-center gap-1 font-medium text-slate-700")
                    | #{latestPosition}
                    if hasPrevious
                      span(class=["text-xs", movementUp ? 'text-emerald-500' : 'text-red-500']) #{movementUp ? '▲' : '▼'}
                td(class="py-3") #{volatilityDisplay}
                td(class="py-3") #{difficultyDisplay}
      else
        p(class="text-sm text-slate-500") Sync keywords from your preferred provider (Semrush, DataForSEO, Google Ads).

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      h3(class="text-lg font-semibold text-slate-900 mb-4") Backlink Signals
      if backlinks && backlinks.length
        ul(class="space-y-4 text-sm text-slate-600")
          each link in backlinks.slice(0, 5)
            li(class="border border-slate-200 rounded-xl p-4")
              a(href=link.sourceUrl target="_blank" rel="noopener" class="font-medium text-blue-600 hover:text-blue-700 line-clamp-1") #{link.sourceUrl}
              p(class="mt-2 text-xs text-slate-500") #{link.anchorText || 'Anchor unavailable'}
              - const domainAuthority = link.metrics && link.metrics.domainAuthority !== undefined ? link.metrics.domainAuthority : '—';
              - const pageAuthority = link.metrics && link.metrics.pageAuthority !== undefined ? link.metrics.pageAuthority : '—';
              - const linkVelocity = link.velocity || {};
              - const linkVelocityTrend = linkVelocity.trend || 'steady';
              - const linkVelocityClass = linkVelocityTrend === 'down' ? 'bg-red-100 text-red-600' : linkVelocityTrend === 'up' ? 'bg-emerald-100 text-emerald-600' : 'bg-slate-100 text-slate-600';
              div(class="mt-3 flex items-center gap-3 text-xs text-slate-500")
                span DA #{domainAuthority}
                span PA #{pageAuthority}
                span(class=["inline-flex items-center px-2 py-0.5 rounded", linkVelocityClass]) #{linkVelocityTrend}
      else
        p(class="text-sm text-slate-500") Connect Ahrefs / Moz or rely on REVERB's crawler to populate backlink trends.

  div(class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-16")
    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      h3(class="text-lg font-semibold text-slate-900 mb-4") Competitor Overlap
      if competitors && competitors.length
        each competitor in competitors
          div(class="border border-slate-200 rounded-xl p-4 mb-4 last:mb-0")
            div(class="flex items-center justify-between mb-2")
              span(class="font-medium text-slate-800") #{competitor.domain}
              span(class="text-xs text-slate-500") Keyword overlap #{competitor.keywordOverlap || '—'}%
            if competitor.opportunities && competitor.opportunities.length
              ul(class="space-y-2 text-sm text-slate-600")
                each gap in competitor.opportunities
                  li
                    span(class="font-medium text-slate-700") #{gap.keyword}
                    span(class="ml-2 text-xs text-blue-500") Opportunity #{gap.opportunityScore || '—'}
                    if gap.notes
                      span(class="block text-xs text-slate-400 mt-1") #{gap.notes}
            else
              p(class="text-sm text-slate-500") No gaps detected yet.
      else
        p(class="text-sm text-slate-500") Pull competitor data to surface content gaps and overlap.

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
      h3(class="text-lg font-semibold text-slate-900 mb-4") AI Signals
      if aiInsights && aiInsights.length
        ul(class="space-y-4 text-sm text-slate-600")
          each insight in aiInsights
            li(class="border border-slate-200 rounded-xl p-4")
              div(class="flex items-center justify-between")
                span(class="text-xs uppercase font-semibold tracking-wide text-blue-500") #{insight.category.replace('_', ' ')}
                if insight.confidence
                  span(class="text-xs text-slate-400") Confidence #{Math.round(insight.confidence * 100)}%
              p(class="mt-2 text-slate-700") #{insight.summary}
              if insight.metadata
                pre(class="mt-3 text-xs bg-slate-50 text-slate-500 rounded-lg p-3 overflow-x-auto") #{JSON.stringify(insight.metadata, null, 2)}
      else
        p(class="text-sm text-slate-500") AI-backed recommendations appear once historical data is available.

  script(src="https://cdn.jsdelivr.net/npm/chart.js@4.4.6/dist/chart.umd.min.js")
  script.
    (function () {
      const ctx = document.getElementById('healthChart');
      const pageData = #{JSON.stringify(audit && audit.pages ? audit.pages.map((page) => ({ url: page.url, score: (page.lighthouseMetrics && page.lighthouseMetrics.performance) ? Math.round(page.lighthouseMetrics.performance * 100) : 70 })) : [])};
      if (ctx && pageData.length) {
        const labels = pageData.map((item) => item.url.replace(/^https?:\/\//, '').slice(0, 30));
        const scores = pageData.map((item) => item.score);
        new Chart(ctx, {
          type: 'line',
          data: {
            labels,
            datasets: [{
              label: 'Performance Score',
              data: scores,
              borderColor: '#2563eb',
              backgroundColor: 'rgba(37, 99, 235, 0.12)',
              tension: 0.35,
              fill: true,
              pointRadius: 3
            }]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                min: 0,
                max: 100,
                ticks: { stepSize: 20 }
              }
            },
            plugins: {
              legend: { display: false }
            }
          }
        });
      }

    })();
