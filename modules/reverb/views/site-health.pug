extends ../../../views/layout

block content
  - const lastAudit = latestAudit || null;
  - const lastCompleted = lastAudit && lastAudit.completedAt ? new Date(lastAudit.completedAt) : null;
  - const lastStarted = lastAudit && lastAudit.startedAt ? new Date(lastAudit.startedAt) : null;
  - const healthScore = lastAudit && typeof lastAudit.technicalHealthScore === 'number' ? Math.round(lastAudit.technicalHealthScore) : null;
  - const performanceScore = lastAudit && typeof lastAudit.performanceScore === 'number' ? Math.round(lastAudit.performanceScore) : null;
  - const accessibilityScore = lastAudit && typeof lastAudit.accessibilityScore === 'number' ? Math.round(lastAudit.accessibilityScore) : null;
  - const seoScore = lastAudit && typeof lastAudit.seoScore === 'number' ? Math.round(lastAudit.seoScore) : null;

  div(class="mb-8 flex flex-col md:flex-row md:items-center md:justify-between gap-4")
    div
      h2(class="text-3xl font-semibold text-slate-900 tracking-tight") Site Health
      p(class="text-slate-500 mt-2") Manage technical audits, Core Web Vitals, and crawl coverage for #{site ? site.domain : 'your site'}.
    div(class="flex flex-wrap items-center gap-3")
      form(action="/reverb/site-health/audit" method="post" class="inline-flex")
        input(type="hidden" name="mock" value="true")
        button(type="submit" class="inline-flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow hover:bg-blue-700 transition")
          i(data-lucide="refresh-cw" class="w-4 h-4")
          | Run audit
      if lastAudit
        a(href="/reverb/site-health/audits/" + lastAudit.id class="inline-flex items-center gap-2 rounded-lg border border-slate-200 px-4 py-2 text-sm font-medium text-slate-600 hover:border-blue-500 hover:text-blue-600 transition")
          i(data-lucide="folder-search" class="w-4 h-4")
          | Review latest audit

  if feedback && feedback.status
    div(class=(feedback.status === 'success' ? 'bg-emerald-50 border border-emerald-200 text-emerald-700' : 'bg-red-50 border border-red-200 text-red-700') + ' rounded-xl px-4 py-3 mb-6 text-sm flex items-start gap-3')
      i(data-lucide=feedback.status === 'success' ? 'check-circle' : 'alert-triangle' class="w-4 h-4 mt-0.5")
      span #{feedback.message || (feedback.status === 'success' ? 'Operation completed successfully.' : 'Something went wrong')}

  if lastAudit
    div(class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-5 mb-10")
      div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
        span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Tech health
        h3(class="text-3xl font-bold text-slate-900 mt-3") #{healthScore !== null ? healthScore : '—'}
        p(class="text-sm text-slate-500 mt-3") Weighted across crawl issues, redirects, and Core Web Vitals.

      div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
        span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Core Web Vitals
        h3(class="text-3xl font-bold text-slate-900 mt-3") #{performanceScore !== null ? performanceScore : '—'}
        p(class="text-sm text-slate-500 mt-3") Performance component from latest Lighthouse scan.

      div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
        span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") Accessibility
        h3(class="text-3xl font-bold text-slate-900 mt-3") #{accessibilityScore !== null ? accessibilityScore : '—'}
        p(class="text-sm text-slate-500 mt-3") Accessibility checks across primary templates.

      div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
        span(class="text-xs uppercase font-semibold tracking-wide text-slate-500") SEO score
        h3(class="text-3xl font-bold text-slate-900 mt-3") #{seoScore !== null ? seoScore : '—'}
        p(class="text-sm text-slate-500 mt-3") Structured data coverage, metadata, and indexability.

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6 mb-10")
      h3(class="text-lg font-semibold text-slate-900 mb-4") Audit summary
      div(class="grid grid-cols-1 md:grid-cols-2 gap-6 text-sm text-slate-600")
        div
          p(class="mb-2")
            span(class="font-medium text-slate-700") Run status:
            |  #{lastAudit.status}
          if lastStarted
            p(class="mb-2")
              span(class="font-medium text-slate-700") Started:
              |  #{lastStarted.toLocaleString()}
          if lastCompleted
            p
              span(class="font-medium text-slate-700") Completed:
              |  #{lastCompleted.toLocaleString()}
        div
          if lastAudit.crawlerSummary
            - const totals = lastAudit.crawlerSummary;
            ul(class="space-y-1")
              li Broken links: #{totals.brokenLinks !== undefined ? totals.brokenLinks : '—'}
              li Redirect chains: #{totals.redirectChains !== undefined ? totals.redirectChains : '—'}
              li Meta issues: #{totals.metaIssues !== undefined ? totals.metaIssues : '—'}
              li Schema items: #{totals.schemaItems !== undefined ? totals.schemaItems : '—'}
          else
            p(class="text-slate-500") No crawler summary available yet.

      if lastAudit.issues
        if (lastAudit.issues.critical && lastAudit.issues.critical.length)
          div(class="mt-6")
            h4(class="text-sm font-semibold text-red-500 uppercase tracking-wide mb-2") Critical blockers
            ul(class="space-y-2 text-sm text-slate-600")
              each note in lastAudit.issues.critical
                li(class="flex gap-2")
                  span(class="mt-1 text-red-400") •
                  span #{note}
        if (lastAudit.issues.recommendations && lastAudit.issues.recommendations.length)
          div(class="mt-6")
            h4(class="text-sm font-semibold text-blue-500 uppercase tracking-wide mb-2") Recommended actions
            ul(class="space-y-2 text-sm text-slate-600")
              each note in lastAudit.issues.recommendations
                li(class="flex gap-2")
                  span(class="mt-1 text-blue-400") •
                  span #{note}

    div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6 mb-10")
      h3(class="text-lg font-semibold text-slate-900 mb-4 flex items-center justify-between")
        span Key pages
        span(class="text-xs text-slate-400") Showing #{pageInsights ? pageInsights.length : 0} of #{pageTotal}
      if pageInsights && pageInsights.length
        table(class="w-full text-sm text-left text-slate-600 border-t border-slate-200")
          thead
            tr(class="text-xs uppercase text-slate-500 tracking-wide")
              th(class="py-3") URL
              th(class="py-3") Status
              th(class="py-3") Issues
              th(class="py-3") Performance
              th(class="py-3") Notes
          tbody
            each page in pageInsights
              - const statusCode = page.statusCode !== undefined && page.statusCode !== null ? page.statusCode : '—';
              - const isBroken = !!page.isBroken;
              - const performance = page.lighthouseMetrics && page.lighthouseMetrics.performance ? Math.round(page.lighthouseMetrics.performance * 100) : '—';
              - const notes = page.notes ? page.notes : '';
              tr(class="border-t border-slate-200 hover:bg-slate-50 transition")
                td(class="py-3")
                  a(href=page.url target="_blank" rel="noopener" class="text-blue-600 hover:text-blue-700") #{page.url}
                td(class="py-3")
                  span(class=(isBroken ? 'text-red-500 font-medium' : 'text-slate-600')) #{isBroken ? 'Broken (' + statusCode + ')' : statusCode}
                td(class="py-3 text-slate-600")
                  if page.meta && page.meta.title === false
                    span(class="block") Missing title
                  if page.meta && page.meta.description === false
                    span(class="block") Missing description
                  if (!page.meta || (page.meta.title !== false && page.meta.description !== false))
                    span(class="block text-slate-400") —
                td(class="py-3") #{performance}
                td(class="py-3 text-slate-500") #{notes || '—'}
      else
        p(class="text-sm text-slate-500") Run an audit to populate page-level diagnostics.

  else
    div(class="bg-white border border-dashed border-slate-300 rounded-2xl p-8 text-center text-slate-500 mb-12")
      h3(class="text-lg font-semibold text-slate-800 mb-2") No audits yet
      p(class="mb-4") Kick off your first crawl to generate technical scores and page diagnostics.
      form(action="/reverb/site-health/audit" method="post" class="inline-flex")
        input(type="hidden" name="mock" value="true")
        button(type="submit" class="inline-flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow hover:bg-blue-700 transition")
          i(data-lucide="refresh-cw" class="w-4 h-4")
          | Run first audit

  div(class="bg-white rounded-2xl border border-slate-200 shadow-sm p-6")
    h3(class="text-lg font-semibold text-slate-900 mb-4") Event overlay
    if events && events.length
      ul(class="space-y-4 text-sm text-slate-600")
        each event in events
          - const occurredAt = event && event.occurredAt ? new Date(event.occurredAt) : null;
          li(class="border border-slate-200 rounded-xl p-4")
            div(class="flex items-center justify-between")
              span(class="font-medium text-slate-700 capitalize") #{event.type ? event.type.replace('_', ' ') : 'event'}
              if occurredAt
                span(class="text-xs text-slate-400") #{occurredAt.toLocaleDateString()}
            p(class="mt-2 text-slate-600") #{event.title || 'Untitled event'}
            if event.metadata
              pre(class="mt-3 text-xs bg-slate-50 text-slate-500 rounded-lg p-3 overflow-x-auto") #{JSON.stringify(event.metadata, null, 2)}
    else
      p(class="text-sm text-slate-500") Events from Google updates, content refreshes, and backlink spikes will appear here to correlate with audits.

