extends ../../../views/layout

block content
  div(class="mb-6 flex items-center justify-between")
    h2(class="text-2xl font-bold text-gray-900") Posts
    div(class="flex items-center space-x-3")
      a(href="/flow/create" class="inline-flex items-center px-3 py-1.5 rounded-lg font-medium bg-purple-950 text-white hover:bg-purple-700 text-sm")
        i(data-lucide="plus" class="w-4 h-4 mr-2")
        | Create
      a(href="/flow" class="text-sm text-gray-500 hover:text-gray-700") ← Back to FLOW

  // Removed inline creation; use unified Create page instead

  // Posts List
  div(class="bg-white rounded-xl shadow-sm border border-gray-200")
    div(class="px-6 py-4 border-b border-gray-200 flex items-center justify-between")
      h3(class="text-lg font-medium text-gray-900") Recent Posts
    if posts && posts.length
      ul(class="divide-y divide-gray-200")
        each p in posts
          li(class="px-6 py-4 hover:bg-gray-50 flex items-center justify-between")
            div
              div(class="font-medium text-gray-900") #{p.title || 'Untitled Post'}
              div(class="text-sm text-gray-500") Status: #{p.status}
            a(href=`/flow/posts/${p.id}` class="text-blue-600 hover:text-blue-800 text-sm") View Workflow →
    else
      div(class="px-6 py-10 text-center text-gray-500") No posts yet.

  script.
    // Serialize multi-select to array on submit
    (function(){
      const form = document.getElementById('create-post');
      if (!form) return;
      form.addEventListener('submit', function(ev){
        const sel = form.querySelector('select[name="account_ids"]');
        if (sel) {
          const values = Array.from(sel.selectedOptions).map(o=>o.value);
          if (values.length) {
            // Replace select with hidden inputs
            sel.name = '';
            values.forEach(v => {
              const input = document.createElement('input');
              input.type = 'hidden';
              input.name = 'account_ids[]';
              input.value = v;
              form.appendChild(input);
            });
          }
        }
      });
    })();


