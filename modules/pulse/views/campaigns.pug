extends ../../../views/layout

block content
  // Page header
  div(class="bg-white rounded-2xl shadow-sm ring-1 ring-gray-200 p-6 mb-8")
    div(class="flex items-center justify-between")
      div
        h2(class="text-2xl font-bold text-gray-900 tracking-tight") Campaigns
        p(class="text-gray-600") Create, schedule and manage campaigns
      div
        a(href="#create-campaign" class="inline-flex items-center px-4 py-2 rounded-xl font-medium bg-blue-600 text-white hover:bg-blue-700 transition")
          i(data-lucide="mail-plus" class="w-4 h-4 mr-2")
          | New campaign

  // List
  div(class="bg-white rounded-2xl shadow-sm ring-1 ring-gray-200 p-6 mb-6")
    div(class="flex items-center justify-between mb-4")
      h3(class="text-lg font-medium text-gray-900") Existing Campaigns
      a(href="/pulse/campaigns" class="inline-flex items-center px-3 py-1.5 rounded-xl bg-gray-100 hover:bg-gray-200 text-gray-800 text-sm transition")
        i(data-lucide="refresh-ccw" class="w-4 h-4 mr-2")
        | Refresh
    // header row
    div(class="hidden md:grid md:grid-cols-4 text-xs font-semibold text-gray-500 uppercase tracking-wide mb-2 px-2")
      div Name
      div Audience
      div Template
      div(class="text-right") Actions
    ul(id="campaignsList" class="divide-y divide-gray-200")
      if !campaigns || campaigns.length === 0
        li(class="text-gray-500 text-sm py-2") No campaigns yet.
      else
        each c in campaigns
          li(class="py-3")
            - const aName = c.audience ? c.audience.name : ''
            - const tName = c.template ? c.template.name : ''
            div(class="flex items-center justify-between")
              div
                div(class="font-medium text-gray-900")= c.name
                div(class="text-sm text-gray-500") Audience: #{aName} | Template: #{tName} | Status: #{c.status}
              div(class="space-x-2")
                button(data-id=c.id class="scheduleCampaign px-3 py-1.5 rounded bg-amber-50 text-amber-700 hover:bg-amber-100 text-sm") Schedule
                button(data-id=c.id class="deleteCampaign px-3 py-1.5 rounded bg-red-50 text-red-700 hover:bg-red-100 text-sm") Delete

  // Create
  div(id="create-campaign" class="bg-white rounded-2xl shadow-sm ring-1 ring-gray-200 p-6")
    h3(class="text-lg font-medium text-gray-900 mb-4") Create Campaign
    form(id="createCampaignForm" class="grid grid-cols-1 md:grid-cols-3 gap-4")
      input(type="hidden" id="entity_id" name="entity_id" value=(currentEntity && currentEntity.id) )
      div
        label(for="name" class="block text-sm font-medium text-gray-700 mb-1") Name
        input(type="text" name="name" id="name" required class="w-full border rounded-lg px-3 py-2 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent")
      div
        label(for="audience_id" class="block text-sm font-medium text-gray-700 mb-1") Audience
        select(name="audience_id" id="audience_id" required class="w-full border rounded-lg px-3 py-2 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent")
          if audiences && audiences.length
            each a in audiences
              option(value=a.id)= a.name
      div
        label(for="template_id" class="block text-sm font-medium text-gray-700 mb-1") Template
        select(name="template_id" id="template_id" required class="w-full border rounded-lg px-3 py-2 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent")
          if templates && templates.length
            each t in templates
              option(value=t.id)= `${t.name}${t.subject ? ' (' + t.subject + ')' : ''}`
      div(class="md:col-span-3 flex justify-end")
        button(type="submit" class="inline-flex items-center px-4 py-2 rounded-xl font-medium bg-blue-600 text-white hover:bg-blue-700 transition")
          i(data-lucide="plus" class="w-4 h-4 mr-2")
          | Create Campaign

  script.
    document.querySelectorAll('.deleteCampaign').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        e.preventDefault();
        const id = btn.getAttribute('data-id');
        if (!confirm('Delete this campaign?')) return;
        const delRes = await fetch(`/pulse/campaigns/${id}`, { method: 'DELETE' });
        await delRes.json();
        window.location.reload();
      });
    });
    document.querySelectorAll('.scheduleCampaign').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        e.preventDefault();
        const id = btn.getAttribute('data-id');
        const when = prompt('Schedule for (ISO date/time)?', new Date(Date.now() + 3600000).toISOString());
        if (!when) return;
        const schRes = await fetch(`/pulse/campaigns/${id}/schedule`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ scheduled_for: when }) });
        await schRes.json();
        window.location.reload();
      });
    });
    document.getElementById('createCampaignForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const form = e.target;
      const payload = Object.fromEntries(new FormData(form).entries());
      const res = await fetch('/pulse/campaigns', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });
      const json = await res.json();
      if (json.success) {
        form.reset();
        window.location.reload();
      } else {
        alert(json.error?.message || 'Failed to create campaign');
      }
    });
    


